                /**
                 * Open popup on 'confirm', 'reject' or 'comments' buttons
                 */
                if(Action === 'confirm' || Action === 'reject' || Action === 'comments') {
                    /**
                     * Specific attributes for these action buttons
                     */
                    el.addEventListener('click', () => {
                        Popup({Action: Action, ActionID: parseInt(ActionID!), documentType: documentType, stepName: stepName})
                    });
                }
                else if(Action == 'opinion') {

                }
                /**
                 * Request blob on view document
                 */
                else {
                    const documentId = el.getAttribute('data-documentid');
                    const pageNo = el.getAttribute('data-pageno')
                    el.addEventListener("click", async () => {
                        /**
                         * unencoded extensions
                         */
                        //const nonEncodedExtensions:string[] = ['.xml', '.txt']; 
                        /**
                         * Save whole object to response variable
                         */
                        const response:any = await requestBlob({DocumentId: parseInt(documentId!), PageNo: parseInt(pageNo!)});
                        const doc = response.Documents[0];
                        const fileExtension = doc.Pages[0].DataType;
                        //const description = doc.Pages[0].Description;
                        if (doc.Pages[0].hasOwnProperty('PageData')) {
                            const data:any = b64toBlob(doc.Pages[0].PageData, fileExtension, 512); //window.atob(doc.Pages[0].PageData);
                            attachment.showFile(data, fileExtension, '_blank'); //, description);
                        }
                        else if (doc.Pages[0].hasOwnProperty('PageText')) {
                            const data:any = (doc.Pages[0].PageText);
                            attachment.showFile(data, fileExtension, '_blank'); //, description);
                        }
                    });
                }